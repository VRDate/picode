{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25540\viewh19300\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs56 \cf0 PICode Design
\fs40 \
\
\ul Name\
\ulnone PI\
\ul \
Git local pull method (over WiFi) (something like \'93git pull offline\'94 command)\ulnone \
Defer: it might be easier just to share internet connection (but can\'92t be done at Uni).\
\
\ul Time stamping method\ulnone \
Assumes that synch routine has worked, so all PIs know the time. Local server should know the time.\
Two types of send: \

\i 	- timestamped (either provide time in the future, in 
\b ticks
\b0 . No args will assume the next bar). Can use GUI timeline interface to mark where the future time is.\
	- instant - do it ASAP.
\i0 \
\
\ul Robust audio synch and resynch method\ulnone \
Assumption: the synch code is always running from the outset, it never stops or crashes and it remains in synch.\
Once all PIs are up and running, time synch should be achieved. For synch send a timestamped synch command. This completely kills all audio. Recreates the AudioContext, then waits, then calls 
\b ac.start()
\b0 .\
Note: must be able to load a bunch of audio code onto the PIs before you start.\
If a new PI comes online, or drifts for any reason, can it join in synch? Probably not! Will need to resynch!\
TODO: Try to speed up the audio frame rate.\
\
\ul Server management and UI \ulnone \
The host multicasts its direct IP address. PIs register to the host with their names.\
(Optional - host can give the PI a memorable name, which is stored permanently on reboot).\
(In general, from Java we can send a load of commands to do things to the PIs: ).\
To send to PIs: use multicast over different port or multicast address from the synch system. No OSC.\
?Always send all messages to PIs, but provide a Map from name to behaviour so that individuals can respond differently.\
\
\ul Bind UI to PIs\ulnone \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 All PIs regularly report back their state. GUI elements are recognised and can be seen on server, automagically controlled over UDP.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \ul \ulc0 Live Code\ulnone \
Not using Java!\
Focus on a GUI interface but also provide a naive commandline with parser.\
Provides: \
	- A list of PIs and their individual states and behaviours.\
	- 2}